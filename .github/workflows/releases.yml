name: Release maker

on:
  workflow_dispatch

jobs:
  release:
    name: Create release
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ github.token }}

    steps:
    - name: Install packages
      run: |
        sudo apt-get update
        sudo apt-get -y install 7zip
    - name: Download artifacts
      run: |
        # Download AppImage and Flatpak
        run_id=$(gh run list --repo mpc-qt/mpc-qt --workflow "C/C++ CI" --branch master -s "success" --limit 1 --json databaseId | jq -r '.[0].databaseId')
        if [[ -n "$run_id" ]]; then
            echo "Downloading artifacts for run ID: $run_id"
            echo "Downloading AppImage..."
            gh run download "$run_id" --repo mpc-qt/mpc-qt --name "mpc-qt-x86_64-AppImage"
            echo "Downloading Flatpak..."
            gh run download "$run_id" --repo mpc-qt/mpc-qt --name "mpc-qt-x86_64-Flatpak"
            echo "Download complete!"
        else
            echo "No recent runs found for 'C/C++ CI'."
        fi

        # Download Windows build
        run_id=$(gh run list --repo mpc-qt/mpc-qt --workflow "Msys2 CI" --branch master -s "success" --limit 1 --json databaseId | jq -r '.[0].databaseId')
        if [[ -n "$run_id" ]]; then
            echo "Downloading Windows build artifact for run ID: $run_id"
            echo "Downloading..."
            gh run download "$run_id" --repo mpc-qt/mpc-qt --name "mpc-qt-win"
            echo "Download complete!"
            7z a "mpc-qt-continuous-win-x86_64.zip" "./mpc-qt-win*"
        else
            echo "No recent runs found for 'Msys2 CI'."
        fi
    - name: Create release and upload artifacts
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
          wget -q https://github.com/TheAssassin/pyuploadtool/releases/download/continuous/pyuploadtool-x86_64.AppImage
          chmod +x pyuploadtool-x86_64.AppImage
          ./pyuploadtool-x86_64.AppImage mpc-qt-continuous-linux-x86_64.AppImage mpc-qt-continuous-linux-x86_64.flatpak mpc-qt-continuous-win-x86_64.zip
